AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  download-to-s3

  Download a file, upload to S3, and return a presigned URL.

Parameters:
  S3Bucket:
    Type: String
    AllowedPattern: "[a-z0-9.-]+"
    Description: Name of your bucket
  S3Prefix:
    Type: String
    Description: Bucket key prefix
  EmailFrom:
    Type: String
    Description: Sender address when using SES
  CorsAllowOrigin:
    Type: String
    Description: If defined, will set CORS origin in API gateway
  StateMachineArn:
    Type: String
    Description: ARN of an existing Step Functions

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 900
  Api:
    Cors:
      AllowMethods: "'GET,POST,OPTIONS'"
      AllowHeaders: "'content-type'"
      AllowOrigin: "'*'"
Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'OPTIONS,POST'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      EndpointConfiguration:
        Type: REGIONAL
      Domain:
        DomainName: api.rophy.online
        CertificateArn: arn:aws:acm:ap-northeast-1:572921885201:certificate/cfc17c2d-d8e9-40e4-9e85-d10124c73919
        EndpointConfiguration: REGIONAL
        BasePath:
          - downloader
  DownloadFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: lambda/
      Handler: index.createJob
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      Events:
        Download:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /download
            Method: post
            RestApiId: !Ref ApiGateway
            Auth:
              ApiKeyRequired: true
      Environment:
        Variables:
          S3_BUCKET:
            Ref: S3Bucket
          S3_PREFIX:
            Ref: S3Prefix
          EMAIL_FROM:
            Ref: EmailFrom
          CORS_ALLOW_ORIGIN:
            Ref: CorsAllowOrigin
          STEPFN_ARN:
            Ref: StateMachineArn
  QueryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda/
      Handler: index.queryJob
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      Events:
        Query:
          Type: Api
          Properties:
            Path: /download
            Method: get
            RestApiId: !Ref ApiGateway
            Auth:
              ApiKeyRequired: true
      Environment:
        Variables:
          CORS_ALLOW_ORIGIN:
            Ref: CorsAllowOrigin
          STEPFN_ARN:
            Ref: StateMachineArn


Outputs:
  WebApi:
    Description: "API Gateway endpoint URL for Prod stage the function"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/download-to-s3/"
  DownloadFunction:
    Description: "Lambda Function ARN"
    Value: !GetAtt DownloadFunction.Arn
  DownloadFunctionIamRole:
    Description: "Implicit IAM Role created for the function"
    Value: !GetAtt DownloadFunctionRole.Arn
